/*
* Copyright (c) File,SHENZHEN HANGSHENG NEW ENERGY Co.,Ltd.
* All Rights Reserved.
* Dept.: Software Department
* File:dtcInfo.h
* Description: This is a readonly file generated by HSNE tools and can't be modified manually.
* REQ IDs:
* History:
* 2017-11-06 11:03:30
*/

/* ---- Source switch on ------------------------------------------------------*/
#ifndef DTC_INFO_H_
#define DTC_INFO_H_

/*------------------------------------------------------------------------------
 					Include files
------------------------------------------------------------------------------*/
#include "typedefs.h"

/*------------------------------------------------------------------------------
                             Defines and constants
------------------------------------------------------------------------------*/
#define m_dtcPrio_none 0
#define m_dtcPrio_low 1
#define m_dtcPrio_middle 2
#define m_dtcPrio_high 3




/*------------------------------------------------------------------------------
                                   Data types
------------------------------------------------------------------------------*/
typedef struct
{
    uint8_t all;
    struct
    {
    	uint8_t warnIndi:1; /*the warning indicator*/
    	uint8_t testNotCompleteThisOperationCycle:1; /*test not completed this operation cycle*/
    	uint8_t testFailedSinceLastClear:1; /*test failed since last clear, Latch until manually clear requested*/
    	uint8_t testNotCompleteSinceLastClear:1; /*test not complete since last clear,  Latch until manually clear requested*/
    	uint8_t confirmDtc:1; /*confirmed DTC,  Latch until manually clear requested or successive 40(it is up to the DTC configuration) cycles not failed(only for the dtc whose ageLimit not equal to 0xFF)*/
    	uint8_t pendingDtc:1; /*pendingDtc*/
    	uint8_t testFailedThisOperationCycle:1; /*test failed this operation cycle*/
    	uint8_t testFailed:1; /*test failed*/
    }b;
}dtcStatus_t;

typedef struct
{
	uint8_t faultCnt;
	uint8_t ageCnt;
	uint8_t dcCnt;
	bool isStored;
    dtcStatus_t dtcStatus;
}obdDiagDt_t;

typedef struct
{
	uint16_t fault_i;
    uint8_t ffPrio;
}obdFFDt_t;


typedef struct
{
    uint32_t dtcCode;
    bool * p_flt;
    bool * p_ok;
    uint8_t fltDec;
    uint8_t fltInc;
    uint8_t fltLimit;
    uint8_t ageLimit;
    uint8_t clearWarnCycle;
    uint8_t dcLimit;
    uint8_t prio;
    uint8_t snapDidNum;
    const uint16_t * pDidIndx;
    uint16_t snapSize;
    uint8_t * snapBuf;
}dtcInfoCfg_t;





/*------------------------------------------------------------------------------
                      External declaration of global RAM-Variables
------------------------------------------------------------------------------*/
extern obdDiagDt_t obdDiagDtGrp[];
extern uint16_t obdFFOrder[];
extern obdFFDt_t obdFFDtGrp[];


/*------------------------------------------------------------------------------
                      External declaration of global ROM-Variables
------------------------------------------------------------------------------*/
extern const uint16_t dtcItemCnt;
extern const uint16_t dtcFreezeFrameCnt;
extern const dtcInfoCfg_t dtcInfoCfgGrp[];

/*------------------------------------------------------------------------------
                    External declaration of global EEPROM-Variables
------------------------------------------------------------------------------*/



/*------------------------------------------------------------------------------
                              Declaration of global functions
------------------------------------------------------------------------------*/


#endif

